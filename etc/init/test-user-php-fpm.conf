description "Test instance"
author "AR <anrdaemon@yandex.ru>"
usage "USER= the owner of the server"

setuid php-fpm
setgid nogroup

#instance $USER

env USER
env GROUP
env HOME
env INIFILE

#expect fork
#expect daemon

#kill signal SIGTERM
#kill timeout 1

console log

pre-start script
  printf '\n-- Pre-start --\n'

  USER="$(id -un)"
  GROUP="$(id -gn)"
  HOME="$( getent passwd "$USER" | cut -d: -f 6 )"
  test "$HOME"

  if [ -d "$HOME/.php" ]; then
    INIFILE="-c '$HOME/.php'"
  else
    if [ -f "$HOME/.php.ini" ]; then
      INIFILE="-c '$HOME/.php.ini'"
    else
      INIFILE=""
    fi
  fi

  set
  set -x
  if [ ! -d "/run/$USER" ] || [ ! -w "/run/$USER" ]; then
    initctl emit php-fcgi-user USER="$USER" GROUP="$GROUP"
  fi

  if [ "$VERBOSE" ]; then
    for i in USER GROUP HOME; do
      eval echo $i=\$$i
    done
  fi

  initctl set-env USER="$USER"
  initctl set-env GROUP="$GROUP"
  initctl set-env HOME="$HOME"
  initctl set-env INIFILE="$INIFILE"
end script

script
  printf '\n-- Start --\n'
  set
  echo /usr/sbin/php5-fpm --fpm-config="$HOME/.php/php-fpm.conf" --pid="/run/$USER/php-fpm.pid" $INIFILE -d open_basedir="$HOME" --nodaemonize
end script
#exec /usr/sbin/php5-fpm --fpm-config="$HOME/.php/php-fpm.conf" --pid="/run/$USER/php-fpm.pid" $INIFILE -d open_basedir="$HOME" --nodaemonize
# Usage: php5-fpm [-n] [-e] [-h] [-i] [-m] [-v] [-t] [-p <prefix>] [-g <pid>] [-c <file>] [-d foo[=bar]] [-y <file>] [-D] [-F]
#   -c <path>|<file> Look for php.ini file in this directory
#   -n               No php.ini file will be used
#   -d foo[=bar]     Define INI entry foo with value 'bar'
#   -e               Generate extended information for debugger/profiler
#   -h               This help
#   -i               PHP information
#   -m               Show compiled in modules
#   -v               Version number
#   -p, --prefix <dir>
#                    Specify alternative prefix path to FastCGI process manager (default: /usr).
#   -g, --pid <file>
#                    Specify the PID file location.
#   -y, --fpm-config <file>
#                    Specify alternative path to FastCGI process manager config file.
#   -t, --test       Test FPM configuration and exit
#   -D, --daemonize  force to run in background, and ignore daemonize option from config file
#   -F, --nodaemonize
#                    force to stay in foreground, and ignore daemonize option from config file
#   -R, --allow-to-run-as-root
#                    Allow pool to run as root (disabled by default)
